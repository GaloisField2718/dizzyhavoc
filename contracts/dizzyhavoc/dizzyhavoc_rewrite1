#-MAKE----------#    #                                            #
PUSH20 ??       # 00 # 73???????????????????????????????????????? #       str value (the server address)
PUSH4 ea81ee95  # 15 # 63ea81ee95                                 #       str key (selector of keccak256('setServers((address,uint32[])[])'))
SSTORE          # 1a # 55                                         #   str (store server address of initial implementation to set reverse proxy server(s))
#---------------#    #                                            #
PUSH1 28        # 1b # 6028                                       #       cc size (size of RUN code)
PUSH1 27        # 1d # 6027                                       #       cc offset (size of MAKE code)
PUSH1 00        # 1f # 6000                                       #       cc destOffset
CODECOPY        # 21 # 39                                         #   cc (put RUN code into memory)
#---------------#    #                                            #
PUSH1 28        # 22 # 6028                                       #       ret size (size of RUN code)
PUSH1 00        # 24 # 6000                                       #       ret offset
RETURN          # 26 # f3                                         #   ret (return the RUN code)
#-RUN-----------#    #                                            #
CALLDATASIZE    # 00 # 36                                         #       cdc size
PUSH1 00        # 01 # 6000                                       #       cdc offset
PUSH1 00        # 03 # 6000                                       #       cdc destOffset
CALLDATACOPY    # 05 # 37                                         #   cdc (put calldata into memory for delegatecall to use)
#---------------#    #                                            #   
PUSH1 00        # 06 # 6000                                       #       dc retSize
PUSH1 00        # 08 # 6000                                       #       dc retOffset
CALLDATASIZE    # 0a # 36                                         #       dc argsSize
PUSH1 00        # 0b # 6000                                       #       dc argsOffset
PUSH1 00        # 0d # 6000                                       #                   cdl i
CALLDATALOAD    # 0f # 35                                         #               shr value, cdl
PUSH1 e0        # 10 # 60e0                                       #               shr shift (32 bytes (word) - 4 bytes (selector), in bits)
SHR             # 12 # 1c                                         #           sload key, also selector, also first 4 bytes of calldata
SLOAD           # 13 # 54                                         #       dc address
GAS             # 14 # 5a                                         #       dc gas
DELEGATECALL    # 15 # f4                                         #   dc (reverse proxy the client request to server)
#---------------#    #                                            #   
RETURNDATASIZE  # 16 # 3d                                         #       cdc size
PUSH1 00        # 17 # 6000                                       #       cdc offset
PUSH1 00        # 19 # 6000                                       #       cdc destOffset
RETURNDATACOPY  # 1b # 3e                                         #   rdc (put dc results into memory)
#---------------#    #                                            #   
                #    #                                            #       jmp b (falls into place from dc results, causes jmp to jump if not zero, dc results in 0 on revert, 1 otherwise)
PUSH1 23        # 1c # 6023                                       #       jmp counter (program counter address of beginning of ret block)
JUMPI           # 1e # 57                                         #   jmp (logic to return or revert based off delegatecall success)
#---------------#    #                                            #   
RETURNDATASIZE  # 1f # 3d                                         #       rev size
PUSH1 00        # 20 # 6000                                       #       rev offset
REVERT          # 22 # fd                                         #   rev (revert)
#---------------#    #                                            #   
JUMPDEST        # 23 # 5b                                         #   ret-jd
RETURNDATASIZE  # 24 # 3d                                         #       ret size
PUSH1 00        # 25 # 6000                                       #       ret offset
RETURN          # 27 # f3                                         #   ret (return)

# 0x73????????????????????????????????????????63ea81ee95556028602760003960286000f33660006000376000600036600060003560e01c545af43d600060003e6023573d6000fd5b3d6000f3