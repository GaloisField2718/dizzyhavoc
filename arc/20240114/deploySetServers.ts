import * as e from './ejra/mod.ts'
import Signer from './lib/Signer.ts'

const secret = Deno.args[0]
const signer = new Signer({ secret })

const url = 'https://endpoints.omniatech.io/v1/avax/fuji/public'
const { address } = signer
const bytecode = '0x608060405234801561001057600080fd5b50610429806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806315a0edce14610030575b600080fd5b61004a600480360381019061004591906101cd565b61004c565b005b73c9c423f875677351ab79c058ed1c38f2b36061a473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461009857600080fd5b60005b8282905081101561015957368383838181106100ba576100b961021a565b5b90506020028101906100cc9190610258565b905060008160000160208101906100e391906102de565b90503660008380602001906100f8919061030b565b9150915060005b8282905081101561014757600083838381811061011f5761011e61021a565b5b905060200201602081019061013491906103c6565b90508481555080806001019150506100ff565b5050505050808060010191505061009b565b505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261018d5761018c610168565b5b8235905067ffffffffffffffff8111156101aa576101a961016d565b5b6020830191508360208202830111156101c6576101c5610172565b5b9250929050565b600080602083850312156101e4576101e361015e565b5b600083013567ffffffffffffffff81111561020257610201610163565b5b61020e85828601610177565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160400383360303811261027457610273610249565b5b80830191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102ab82610280565b9050919050565b6102bb816102a0565b81146102c657600080fd5b50565b6000813590506102d8816102b2565b92915050565b6000602082840312156102f4576102f361015e565b5b6000610302848285016102c9565b91505092915050565b6000808335600160200384360303811261032857610327610249565b5b80840192508235915067ffffffffffffffff82111561034a5761034961024e565b5b60208301925060208202360383131561036657610365610253565b5b509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103a38161036e565b81146103ae57600080fd5b50565b6000813590506103c08161039a565b92915050565b6000602082840312156103dc576103db61015e565b5b60006103ea848285016103b1565b9150509291505056fea26469706673582212208723ef233ad7144ae3b760301895883f38efc0abf3f83be7c96ed093b4ea1d4864736f6c63430008170033'
const call = { input: bytecode }

const ejrrqs = [
    e.txCount({ address }),
    e.gasPrice(),
    e.estimateGas({ call }),
    e.chainId()
] as const
const [nonce, gasPrice, startGas, chainId] = await e.ejrb({ url, ejrrqs })

const stx = signer.signTx({ nonce, gasPrice, startGas, chainId, data: bytecode })

const ejrrq = e.sendRawTx({ data: stx })
const txHash = await e.ejrc({ url, ejrrq })

console.log(txHash)