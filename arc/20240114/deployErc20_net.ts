import * as e from './ejra/mod.ts'
import Signer from './lib/Signer.ts'

const secret = Deno.args[0]
const signer = new Signer({ secret })

const url = 'https://endpoints.omniatech.io/v1/avax/fuji/public'
const { address } = signer
const bytecode = '0x608060405234801561001057600080fd5b50610bc0806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461013557806395d89b4114610165578063a9059cbb14610183578063dd62ed3e1461019f578063f8405840146101cf5761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100dd57806323b872dd146100fb578063313ce56714610117575b600080fd5b6100ab6101d9565b6040516100b89190610895565b60405180910390f35b6100db60048036038101906100d69190610950565b610216565b005b6100e5610300565b6040516100f2919061099f565b60405180910390f35b610115600480360381019061011091906109ba565b610313565b005b61011f6104ba565b60405161012c9190610a29565b60405180910390f35b61014f600480360381019061014a9190610a44565b6104c3565b60405161015c919061099f565b60405180910390f35b61016d6104db565b60405161017a9190610895565b60405180910390f35b61019d60048036038101906101989190610950565b610518565b005b6101b960048036038101906101b49190610a71565b61062b565b6040516101c6919061099f565b60405180910390f35b6101d7610650565b005b60606040518060400160405280600a81526020017f44697a7a794861766f6300000000000000000000000000000000000000000000815250905090565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516102f4919061099f565b60405180910390a35050565b60006a52b7d2dcc80cd2e4000000905090565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461039f9190610ae0565b92505081905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103f49190610ae0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104499190610b14565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104ad919061099f565b60405180910390a3505050565b60006012905090565b60006020528060005260406000206000915090505481565b60606040518060400160405280600481526020017f445a485600000000000000000000000000000000000000000000000000000000815250905090565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105669190610ae0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105bb9190610b14565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161061f919061099f565b60405180910390a35050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156106dd575073c9c423f875677351ab79c058ed1c38f2b36061a473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6106e657600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610b5d565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107fa919061099f565b60405180910390a350565b600081519050919050565b600082825260208201905092915050565b60005b8381101561083f578082015181840152602081019050610824565b60008484015250505050565b6000601f19601f8301169050919050565b600061086782610805565b6108718185610810565b9350610881818560208601610821565b61088a8161084b565b840191505092915050565b600060208201905081810360008301526108af818461085c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e7826108bc565b9050919050565b6108f7816108dc565b811461090257600080fd5b50565b600081359050610914816108ee565b92915050565b6000819050919050565b61092d8161091a565b811461093857600080fd5b50565b60008135905061094a81610924565b92915050565b60008060408385031215610967576109666108b7565b5b600061097585828601610905565b92505060206109868582860161093b565b9150509250929050565b6109998161091a565b82525050565b60006020820190506109b46000830184610990565b92915050565b6000806000606084860312156109d3576109d26108b7565b5b60006109e186828701610905565b93505060206109f286828701610905565b9250506040610a038682870161093b565b9150509250925092565b600060ff82169050919050565b610a2381610a0d565b82525050565b6000602082019050610a3e6000830184610a1a565b92915050565b600060208284031215610a5a57610a596108b7565b5b6000610a6884828501610905565b91505092915050565b60008060408385031215610a8857610a876108b7565b5b6000610a9685828601610905565b9250506020610aa785828601610905565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aeb8261091a565b9150610af68361091a565b9250828203905081811115610b0e57610b0d610ab1565b5b92915050565b6000610b1f8261091a565b9150610b2a8361091a565b9250828201905080821115610b4257610b41610ab1565b5b92915050565b600081519050610b5781610924565b92915050565b600060208284031215610b7357610b726108b7565b5b6000610b8184828501610b48565b9150509291505056fea26469706673582212202826d901d0c441f762d83b0b74a9751b80cefbbd91719b9fd0aa5c9a229db3e264736f6c63430008170033'
const call = { input: bytecode }

const ejrrqs = [
    e.balance({ address }),
    e.gasPrice(),
    e.estimateGas({ call })
] as const
const [balance, gasPrice, estimateGas] = await e.ejrb({ url, ejrrqs })

const cost = gasPrice * estimateGas
const net = balance - cost

console.log('balance', balance)
console.log('gasPrice', gasPrice)
console.log('estimateGas', estimateGas)
console.log('cost', cost)
console.log('net', net)